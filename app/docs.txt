IDEAS
https://blog.wolfram.com/2021/02/10/classifying-cough-sounds-to-predict-covid-19-diagnosis/
https://medium.com/swlh/a-journey-to-speech-recognition-using-tensorflow-1fc1169fef99
https://aruno14.medium.com/comparaison-of-audio-representation-in-tensorflow-b6c33a83d77f
https://towardsdatascience.com/understanding-rnn-and-lstm-f7cdf6dfc14e
https://www.youtube.com/watch?v=BSpXCRTOLJA
https://youtu.be/p5glHn5Nlo0?t=128

CODES
https://www.tensorflow.org/io/tutorials/audio
https://www.tensorflow.org/api_docs/python/tf/raw_ops/Mfcc
https://www.tensorflow.org/io/api_docs/python/tfio/experimental/audio/melscale
https://matplotlib.org/devdocs/gallery/subplots_axes_and_figures/subplots_demo.html

LEARNING
a1. data = { Randomize(Positive[] Strings), Randomize(Negative[] String) } -> (2,?)
a2. data = Spectogram(AudioTensor(data)) --> (2,?,150,128)
a3. data = mix(data) --> (?,2,150,128)
a4. train, valid = tvs(data) --> (80%,2,150,128), (20%,2,150,128)
a5. Randomize(train); Randomize(valid)
a6. x_train, y_train = xy(train); x_valid, y_valid = xy(valid)
b1. LSTM Layer1 (128) + dropout 0.2
b2. LSTM Layer2 (128) + dropout 0.2
b3. Dense Layer1 (32) + dropout 0.2
b4. Dense Layer2 (2)
b5. optimizer=Adam Optimizer, loss=Binary CrossEntropy
c1. Epochs ?
